// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
@use "styles/_theme-colors-teal-pink.scss" as theme-colors;

//@use 'dist/mb' as mb;
//@use "../../../dist/mb" as mb;
//@use "../../../dist/mb/styles/charts/ohlcv-chart/ohlcv_chart-theme" as ohlcv-chart;
@use "../../mb/src/lib/charts/ohlcv-chart/ohlcv_chart-theme" as ohlcv-chart;
@use "../../mb/src/lib/charts/frequency-response-chart/frequency-response-chart-theme" as freq-resp-chart;
@use "../../mb/src/lib/charts/sparkline/sparkline-theme" as sparkline with ( $theming-enabled: true );

// Styles used by KaTeX.
@use 'katex/dist/katex.css' as *;

// Include material symbols fonts.
@use 'material-symbols' with (
  $material-symbols-font-path: 'material-symbols/'
);

/*@use 'roboto-fontface/css/roboto/sass/roboto-fontface' with (
  $roboto-font-path: 'roboto-fontface/fonts'
);*/

@use "pkg:@fontsource-utils/scss" as fontsource;
@use "pkg:@fontsource/roboto/scss" as Roboto;
@include fontsource.faces($metadata: Roboto.$metadata);

:root {
  // Must specify color-scheme for theme mixin to automatically work
  //color-scheme: light dark;

  // Create one theme that works automatically for light and dark theme
  @include mat.theme((
    color: (
      //primary: mat.$green-palette,
      //tertiary: mat.$violet-palette,
      primary: theme-colors.$primary-palette,
      tertiary: theme-colors.$tertiary-palette,
    ),
    typography: Roboto,
    density: 0,
  ));

  // Use high contrast values when users prefer contrast
  @media (prefers-contrast: more) {
    @include theme-colors.high-contrast-overrides(color-scheme);
  }

  .darkMode {
    color-scheme: dark;
  }

  .lightMode {
    color-scheme: light;
  }
}

// Body style.
html,
body {
  height: 100%;
  background: var(--mat-sys-surface);
  color: var(--mat-sys-on-surface);
  //--ohlcv-chart-axis-color: var(--mat-sys-tertiary);
  //@include mb.ohlcv-chart-overrides((
  @include ohlcv-chart.overrides((
    axis-color: var(--mat-sys-secondary),
    crosshair-annotation-background: var(--mat-sys-secondary-container),
    crosshair-annotation-color: var(--mat-sys-on-secondary-container),
    legend-color: var(--mat-sys-secondary),
    legend-font-family: var(--mat-sys-label-small-font),
    legend-font-size: var(--mat-sys-label-small-size),
    control-panel-variant-color: var(--mat-sys-tertiary),
    control-panel-on-variant-color: var(--mat-sys-on-tertiary),
    control-panel-variant-container-color: var(--mat-sys-tertiary-container),
    control-panel-on-variant-container-color: var(--mat-sys-on-tertiary-container),
  ));
  @include freq-resp-chart.overrides((
    axis-color: var(--mat-sys-secondary),
    label-color: var(--mat-sys-secondary),
    legend-color: var(--mat-sys-secondary),
    coords-color: var(--mat-sys-on-tertiary),
    control-panel-variant-color: var(--mat-sys-tertiary),
    control-panel-on-variant-color: var(--mat-sys-on-tertiary),
    control-panel-variant-container-color: var(--mat-sys-tertiary-container),
    control-panel-on-variant-container-color: var(--mat-sys-on-tertiary-container),
  ));
  @include sparkline.overrides((
    stroke-width: 0px,
    stroke-color: var(--mat-sys-tertiary),
    fill-color: var(--mat-sys-tertiary),
  ));
}

body {
  margin: 0;
  padding: 0;
  font-family: Roboto;
}

.note {
  margin: 0 16px;
}

// External references. Uses hardcoded primary color.

a:link {
  color: var(--mat-sys-primary);
}

a:visited {
  color: var(--mat-sys-primary);
}

a[href^="http"]:after {
  content: '';
  background: no-repeat left .25em center url('data:image/svg+xml,\
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="-24 -24 48 48"> \
      <defs> \
          <mask id="corner"> \
              <rect fill="white" x="-24" y="-24" width="48" height="48"></rect> \
              <rect fill="black" x="2" y="-24" width="22" height="26"></rect> \
          </mask> \
      </defs> \
      <g fill="%23009688" stroke="%23009688" stroke-width="4"> \
          <rect x="-20" y="-16" width="32" height="32" rx="7" ry="7" stroke-width="3" fill="none" mask="url(%23corner)"/> \
          <g transform="translate(1,0)" stroke-linecap="square"> \
              <line x1="0" y1="0" x2="17" y2="-17" stroke-width="6"/> \
              <polygon points="21 -21, 21 -8, 8 -21" stroke-linejoin="round" stroke-width="3"/> \
           </g> \
       </g> \
  </svg>');
  padding-right: 1.5em;
}

// Bibliography

.citation {
  margin-left: 0.7cm;
  text-indent: -0.7cm;
  padding: 0px 5px;
  display: inline-block;
  width: calc(100% - 1cm);
  word-break: break-word;
  line-height: 180%;
  user-select: none;
}

// Quotes

q {
  quotes: '\201c' '\201d' '\2018' '\2019';
}

q::before {
  content: open-quote;
}

q::after {
  content: close-quote;
}

// Figures

body {
  counter-reset: cntFig;
}

figure {
  counter-increment: cntFig;
}

figure figcaption:before {
  content: "Figure " counter(cntFig) ".";
  font-weight: bold;
  padding-right: 0.5em;
}

figure img {
  width: 100%;
  object-fit: cover;
}

figure.figleft {
  float: left;
  width: 38.1966%; // 1 - 1 / phi
  max-width: 250px;
  margin: 1em 1.2em 0.5em 0;
}

figure.figright {
  float: right;
  width: 38.1966%; // 1 - 1 / phi
  max-width: 250px;
  margin: 1em 0 0.5em 1.2em;
}

figure.figwide {
  width: 100%;
  margin: 1em auto;
}
