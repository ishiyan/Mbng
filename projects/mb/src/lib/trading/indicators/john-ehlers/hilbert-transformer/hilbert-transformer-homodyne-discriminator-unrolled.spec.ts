import { } from 'jasmine';

import { HilbertTransformerHomodyneDiscriminatorUnrolled } from './hilbert-transformer-homodyne-discriminator-unrolled';

// ng test mb  --code-coverage --include='**/indicators/**/*.spec.ts'
// ng test mb  --code-coverage --include='**/indicators/john-ehlers/hilbert-transformer/*.spec.ts'

/* eslint-disable max-len */
// Input sata taken from TA-Lib (http://ta-lib.org/) tests,
//    test_ht_hd.xsl (price, D5 … D256, 252 entries).
const input = [
  92.0000, 93.1725, 95.3125, 94.8450, 94.4075, 94.1100, 93.5000, 91.7350, 90.9550, 91.6875,
  94.5000, 97.9700, 97.5775, 90.7825, 89.0325, 92.0950, 91.1550, 89.7175, 90.6100, 91.0000,
  88.9225, 87.5150, 86.4375, 83.8900, 83.0025, 82.8125, 82.8450, 86.7350, 86.8600, 87.5475,
  85.7800, 86.1725, 86.4375, 87.2500, 88.9375, 88.2050, 85.8125, 84.5950, 83.6575, 84.4550,
  83.5000, 86.7825, 88.1725, 89.2650, 90.8600, 90.7825, 91.8600, 90.3600, 89.8600, 90.9225,
  89.5000, 87.6725, 86.5000, 84.2825, 82.9075, 84.2500, 85.6875, 86.6100, 88.2825, 89.5325,
  89.5000, 88.0950, 90.6250, 92.2350, 91.6725, 92.5925, 93.0150, 91.1725, 90.9850, 90.3775,
  88.2500, 86.9075, 84.0925, 83.1875, 84.2525, 97.8600, 99.8750, 103.2650, 105.9375, 103.5000,
  103.1100, 103.6100, 104.6400, 106.8150, 104.9525, 105.5000, 107.1400, 109.7350, 109.8450, 110.9850,
  120.0000, 119.8750, 117.9075, 119.4075, 117.9525, 117.2200, 115.6425, 113.1100, 111.7500, 114.5175,
  114.7450, 115.4700, 112.5300, 112.0300, 113.4350, 114.2200, 119.5950, 117.9650, 118.7150, 115.0300,
  114.5300, 115.0000, 116.5300, 120.1850, 120.5000, 120.5950, 124.1850, 125.3750, 122.9700, 123.0000,
  124.4350, 123.4400, 124.0300, 128.1850, 129.6550, 130.8750, 132.3450, 132.0650, 133.8150, 135.6600,
  137.0350, 137.4700, 137.3450, 136.3150, 136.4400, 136.2850, 129.0950, 128.3100, 126.0000, 124.0300,
  123.9350, 125.0300, 127.2500, 125.6200, 125.5300, 123.9050, 120.6550, 119.9650, 120.7800, 124.0000,
  122.7800, 120.7200, 121.7800, 122.4050, 123.2500, 126.1850, 127.5600, 126.5650, 123.0600, 122.7150,
  123.5900, 122.3100, 122.4650, 123.9650, 123.9700, 124.1550, 124.4350, 127.0000, 125.5000, 128.8750,
  130.5350, 132.3150, 134.0650, 136.0350, 133.7800, 132.7500, 133.4700, 130.9700, 127.5950, 128.4400,
  127.9400, 125.8100, 124.6250, 122.7200, 124.0900, 123.2200, 121.4050, 120.9350, 118.2800, 118.3750,
  121.1550, 120.9050, 117.1250, 113.0600, 114.9050, 112.4350, 107.9350, 105.9700, 106.3700, 106.8450,
  106.9700, 110.0300, 91.0000, 93.5600, 93.6200, 95.3100, 94.1850, 94.7800, 97.6250, 97.5900,
  95.2500, 94.7200, 92.2200, 91.5650, 92.2200, 93.8100, 95.5900, 96.1850, 94.6250, 95.1200,
  94.0000, 93.7450, 95.9050, 101.7450, 106.4400, 107.9350, 103.4050, 105.0600, 104.1550, 103.3100,
  103.3450, 104.8400, 110.4050, 114.5000, 117.3150, 118.2500, 117.1850, 109.7500, 109.6550, 108.5300,
  106.2200, 107.7200, 109.8400, 109.0950, 109.0900, 109.1550, 109.3150, 109.0600, 109.9050, 109.6250,
  109.5300, 108.0600
];

// Expected smoothed data is taken from TA-Lib (http://ta-lib.org/) tests,
// test_ht_hd.xsl model (smooth, E5 … E256, 252 entries).
const expectedSmoothed = [
  Number.NaN, Number.NaN, Number.NaN, 94.366250, 94.596250,
  94.466500, 93.999000, 93.006750, 92.013500, 91.658500,
  92.670750, 94.971000, 96.490750, 94.630250, 92.160250,
  91.462000, 90.975250, 90.555750, 90.599750, 90.642000,
  89.962750, 88.943750, 87.714000, 85.882500, 84.407000,
  83.447500, 82.971250, 84.410250, 85.614750, 86.708500,
  86.621750, 86.398500, 86.337500, 86.643750, 87.654750,
  88.057000, 87.299000, 86.116500, 84.824500, 84.379500,
  83.927500, 85.019750, 86.449250, 87.864250, 89.436250,
  90.241250, 91.077250, 90.944500, 90.502250, 90.585000,
  90.084750, 89.089500, 87.894000, 86.147500, 84.515000,
  84.078750, 84.559750, 85.491000, 86.858500, 88.188500,
  88.977250, 88.822750, 89.531750, 90.650500, 91.274000,
  92.048250, 92.541750, 92.059250, 91.608000, 90.982500,
  89.727500, 88.412000, 86.397000, 84.709250, 84.166500,
  89.466500, 94.477250, 99.265750, 103.115500, 103.821750,
  103.808000, 103.670750, 103.911000, 105.151000, 105.314500,
  105.512750, 106.178000, 107.631250, 108.836500, 110.008500,
  114.238000, 117.131500, 118.224000, 119.110250, 118.572250,
  117.946000, 116.954250, 115.176000, 113.483500, 113.518250,
  113.914250, 114.690000, 114.053750, 113.139500, 113.036000,
  113.377500, 115.994000, 117.252000, 118.216500, 117.179000,
  115.860500, 115.236500, 115.521000, 117.486000, 119.061500,
  120.078000, 121.971000, 123.574500, 123.697000, 123.584500,
  123.805500, 123.603500, 123.831000, 125.614500, 127.467500,
  129.286500, 130.950000, 131.670000, 132.702000, 134.056000,
  135.481500, 136.612000, 137.152000, 136.927000, 136.686500,
  136.443500, 133.443000, 130.953500, 128.340500, 125.983500,
  124.814000, 124.598500, 125.599000, 125.822500, 125.851000,
  125.070000, 123.101500, 121.516500, 120.823000, 121.892500,
  122.464500, 122.000000, 121.884000, 121.918000, 122.449500,
  124.108000, 125.770000, 126.456000, 125.324000, 124.073000,
  123.519000, 122.850000, 122.668500, 123.146500, 123.501500,
  123.892500, 124.211000, 125.358500, 125.602500, 127.043500,
  128.676500, 130.411500, 132.315000, 134.150000, 134.367000,
  133.847500, 133.572500, 132.357000, 130.298000, 129.195500,
  128.324000, 127.153500, 126.025000, 124.431500, 123.958000,
  123.521500, 122.618000, 121.848500, 120.195500, 119.161500,
  119.724000, 120.211500, 119.190000, 116.658000, 115.395500,
  113.770000, 111.191500, 108.746000, 107.169500, 106.636500,
  106.712500, 108.109000, 101.487500, 97.427000, 94.719000,
  94.022000, 94.347000, 94.591500, 95.852000, 96.698000,
  96.380000, 95.743500, 94.113000, 92.761000, 92.273500,
  92.725000, 93.979500, 95.135000, 95.204500, 95.231500,
  94.679500, 94.184500, 94.797500, 97.618500, 101.655000,
  105.045500, 105.205000, 105.276500, 104.654500, 103.923000,
  103.668000, 104.017000, 106.614000, 110.224000, 113.841000,
  116.435000, 117.262000, 114.437000, 112.049000, 109.977000,
  107.953000, 107.625500, 108.349000, 108.756000, 109.104500,
  109.192000, 109.200000, 109.158500, 109.458500, 109.565000,
  109.586500, 108.998500
];

// Expected detrended data is taken from TA-Lib (http://ta-lib.org/) tests,
// test_ht_hd_tl.xsl model (detrender, F5 … F256, 252 entries).
const expectedDetrended = [
  Number.NaN, Number.NaN, Number.NaN, 8.98725291750000000, 9.00915765750000000,
  62.89229125575000000, 62.97912762075000000, 9.32026150012499000, 8.72833094955000000, -1.18487042824499000,
  -1.50107340048300000, -0.86554876465665300, 0.77455320732833200, 2.73425135915793000, 3.10719600483979000,
  -0.32043818348019300, -4.20971694786669000, -3.76607919981557000, -2.19840953444192000, -1.66730405611637000,
  -0.82421664344656100, -0.38972085057669300, -1.44032300054316000, -3.09190726835819000, -4.14005072156989000,
  -5.43783089745035000, -5.80420011549713000, -4.24476734097920000, -2.46885943954737000, 1.58710671977183000,
  4.43981858459690000, 4.09313796580003000, 2.22579638727991000, 0.08537893440106290, 0.07614965962751420,
  0.65627035940797800, 1.97596326645869000, 1.80442306972465000, -0.76683833161150600, -2.83984842772889000,
  -3.74697339934701000, -2.68826283652387000, -1.23064642254623000, 1.09946840528635000, 3.91972422308773000,
  4.57846163358676000, 4.91688320830916000, 3.81997889869049000, 2.55676637716418000, 1.26507167176780000,
  -0.50288443520152700, -0.57617141736822500, -0.96103685665957100, -2.27638430534806000, -3.13716623486099000,
  -3.98079947738033000, -4.26583247323698000, -2.63959640039743000, -0.12692619104035100, 1.76433489230392000,
  3.10091823508968000, 3.56487192559447000, 3.00083561141979000, 1.51806394525404000, 1.31280489765731000,
  2.50935714439499000, 2.35255338597973000, 1.92841612829923000, 1.60036265582390000, 0.06634301061101840,
  -1.21377249429583000, -1.76687971650801000, -3.13318310164546000, -4.15128566296215000, -5.08219214506417000,
  -4.50751700586996000, -1.65504949371185000, 7.60380811494012000, 15.28911596036860000, 14.88477549627070000,
  12.99886906351420000, 7.19915926099098000, 2.38351083241801000, 0.92952210211501300, 0.51773586549053500,
  1.85518088811070000, 1.83829239536756000, 1.04306155568002000, 1.74675295275361000, 3.09896531604222000,
  4.46274347582128000, 4.71023535541215000, 8.22206979394878000, 10.20471942482790000, 6.45067137892342000,
  3.88610429720727000, 0.96991350698374700, -1.82963426900828000, -2.98641863998011000, -4.61916641640855000,
  -5.25745083982017000, -2.72176646217929000, -0.06609252040257180, 1.04039032886564000, 0.08017265813270270,
  -1.91662698969654000, -0.80130442487024800, 0.77964217713282100, 4.25230033030034000, 5.28350296383388000,
  3.10502321031030000, 0.27115917330546200, -2.79324779318748000, -2.21668023651026000, -0.23487376211077200,
  3.19066742289005000, 5.20999393848774000, 4.59373390141711000, 5.07623775499030000, 5.52166161646234000,
  3.18346552831830000, 0.77584943073788900, 0.52199624043629500, 0.42565791776485100, 0.73761865440863100,
  3.24552740845475000, 5.31574324639712000, 5.63785437853044000, 5.76387266052843000, 4.63860064871392000,
  4.01639198580676000, 5.04837026370218000, 5.48653081543948000, 4.79457953146280000, 3.23349400610759000,
  1.01449886376103000, -1.18833174543853000, -2.17786864601495000, -7.34513291852914000, -11.50426011352260000,
  -11.37221338511770000, -11.33559485984170000, -7.74619267543083000, -3.59741713526470000, 0.63099180612244000,
  1.78298570503918000, -0.05284814696186360, -1.88843174477108000, -5.01597392573878000, -5.83342657377768000,
  -3.92922937752374000, -0.18683843476507100, 1.95607761821063000, 0.23472360933602400, -0.41309548234113700,
  0.38266745173604600, 1.49862889415607000, 4.02155722687378000, 5.33120420836294000, 3.61850994475616000,
  -0.35289594825326000, -3.46092056067680000, -3.18921954436038000, -2.49325013638114000, -1.59946761080849000,
  0.36121674507225200, 1.28701295443815000, 1.55559487384262000, 1.53303420008103000, 2.57255681225572000,
  2.62870085569429000, 3.13397071228133000, 4.85862146022901000, 5.14708489427225000, 5.30680757348722000,
  5.04382996210236000, 2.99916871645245000, 0.02363191358535060, -1.28708550920351000, -2.71738883445928000,
  -5.02798528811439000, -5.03676785247540000, -3.88604064591759000, -4.08252818775635000, -4.04110378590922000,
  -4.40039573137898000, -3.62218844045606000, -2.13018013334558000, -2.72853159066207000, -3.04893739344158000,
  -3.81053374031141000, -4.06902280248562000, -1.37278934716961000, 0.25445656490840700, -1.94767628533836000,
  -6.78718331682070000, -8.15194602296862000, -8.10019390801706000, -11.33153249871230000, -11.55092444836040000,
  -8.92673363548058000, -4.71709009204003000, -3.18121994360306000, -0.60270707950848200, -10.05426111933760000,
  -16.75228621791540000, -11.36608161740570000, -7.69128618504172000, -1.92020294611357000, 0.70733464629796300,
  3.03978872650678000, 4.41680905312702000, 0.85901441370150100, -2.16944309441368000, -4.94188633543843000,
  -6.20700437333476000, -3.70132242074857000, -0.21667627392717300, 2.81825540058030000, 4.03015489676071000,
  2.25939281328576000, 0.46386462324942300, -0.52712246258679300, -0.86458622397821600, 1.63986141262330000,
  6.85043506002733000, 11.27655864736460000, 11.91772714034700000, 6.82845339282070000, 1.81455653743714000,
  -0.32770330788056300, -2.51142625160202000, -1.28074066811762000, 1.48166065755279000, 6.83496943904234000,
  12.29335145847880000, 14.03376432173650000, 11.76231007817030000, 6.36898977425706000, -2.99161050039115000,
  -9.14966540170821000, -8.53172032731284000, -7.61738045385190000, -4.27219556885827000, -0.12066829540402900,
  1.28701281691344000, 1.21839253427298000, 0.83864843431442200, 0.32581834936928400, 0.11396996331983700,
  0.37278108469203800, 0.40559600219908000,
];

// Expected quadrature data is taken from TA-Lib (http://ta-lib.org/) tests,
// test_ht_hd_tl.xsl model (Q1, G5 … G256, 252 entries).
const expectedQuadrature = [
  Number.NaN, Number.NaN, Number.NaN, 0.8559279933568650, 0.8580141569849850,
  11.1226347806398000, 11.1434153784306000, 33.1142306757262000, 32.8062895779834000, -34.2628281943790000,
  -36.4457785394292000, -14.4725429060892000, -14.8752325935460000, -0.5943687075659050, 1.0816337010399700,
  3.2119113840585100, 1.7164416381464900, -3.4129153231577700, -7.9246472478734800, -4.4349719579671900,
  1.5060726737102600, 2.4377914646047900, 2.2394787515255400, 1.7346963532590400, -1.1858180023864700,
  -4.2509366392233400, -4.5809065732862800, -3.9757783070505400, -2.5377825366314700, 2.8458688353141600,
  7.0234777780291500, 10.8861230232300000, 11.7052379430424000, 4.4137690699453800, -2.4367559008624600,
  -5.8114054986535800, -3.5376291395119500, 0.2499368163660640, 1.7665932956085700, 0.8090027292244470,
  -4.0910339908635900, -6.2333301991169800, -4.1643791905685500, 0.0401603923425658, 3.9281242989979600,
  6.0193274787686500, 7.7591353049801000, 5.1814380651823300, 1.7973805667532200, -0.7991744496047320,
  -3.3366192942568300, -3.5668296128829900, -4.0939975454975100, -2.8341375124167600, -1.3846926066694400,
  -2.5454760890404000, -2.7811342707600300, -2.0260732649150300, -0.9818638584688700, 2.0285058283016600,
  5.2779721169940400, 5.7860276422967000, 4.5193878208020000, 2.5329684849236000, 0.1423840131921060,
  -1.9521197922827800, -1.8251672752003800, 0.7150600069795920, 0.7994169698750690, -0.8227834832230920,
  -1.1953076118568300, -2.7033222365763200, -4.0215810143487900, -3.1133882653071900, -3.3727330659538800,
  -3.5862697912351000, -2.3271307546588800, 1.3967927399009400, 7.5859800747038800, 17.5202398178045000,
  21.7775470129387000, 9.5991769773542600, -1.7009413933170600, -9.8490095996520700, -14.4163559888290000,
  -8.8876685504963900, -3.8088608603955700, -0.1029524394353370, 1.2589971063147300, -0.4765716282870140,
  0.6094909101300180, 2.7640956468411200, 4.1946971914159900, 3.5445516967008500, 5.2251021024091200,
  6.6201917140448400, -2.8495238379305500, -9.0959703441876400, -9.1134169199047000, -10.2148201454162000,
  -7.3136663138008900, -4.8128017362244300, -3.0521950023164700, 2.9705374106811400, 7.0471233179193400,
  5.1299521465313400, 1.0621352246548200, -2.7813337185243600, -0.1878882503475870, 3.9542017767864300,
  6.4071948272704200, 5.5705423236785600, -1.6971896127759600, -6.4189391646020800, -7.8607519095384500,
  -3.3119804006186600, 3.3244997174408500, 7.0688962449555100, 8.0275691624283500, 3.2951278671103200,
  0.5517625076135950, 0.6815880956418580, -3.3346412780879400, -6.4479164934995700, -3.8163181203815700,
  -0.7996433665090210, 0.6289073800125230, 4.0798211813188300, 6.3336143670228800, 3.7866547361576200,
  1.2938289627313300, -0.9776467179315880, -2.4730165214844600, 0.3759413140450600, 1.4515712204150800,
  -1.2207751910917200, -4.6046578687893100, -7.6077705444153500, -10.2263972446652000, -9.2951942670991200,
  -13.7969792194521000, -18.5833472655321000, -8.2046219642837500, -0.1092564906331420, 8.4550184552540200,
  16.5606901050039000, 16.1617853964896000, 10.3720044687360000, -0.3233257948604360, -5.6053458859999000,
  -7.9097816806386300, -5.8738486656613500, 1.9333166151726700, 8.0738207486996200, 8.8861273769019800,
  1.9411696188001200, -1.9647853979687300, 1.1650484816462900, 3.3877303472412500, 5.6177115898356200,
  5.0663396977897500, -1.3935360247312300, -8.8799548042704100, -11.4709082857312000, -5.5310885941625000,
  0.5755933031834010, 2.5284639134520300, 4.9314417817199500, 4.6984304097278600, 2.4792769533191700,
  1.1089679891564700, 1.6724609104682900, 1.8568204669954100, 1.2354536735806600, 2.9751466992063100,
  2.5101801145083600, 0.5332072567493760, -0.6705270362018960, -3.7928886619418000, -7.4267884455800200,
  -7.0562620990751300, -5.2066095609519400, -5.8773576562291300, -3.6461794371756800, 0.8220189541330700,
  0.8080551237369970, 0.0952296786175301, 0.1980063308728420, 0.7221526191322410, 2.9184391004322300,
  1.1352980783867700, -1.0847948251860100, -0.9303101863912920, -0.8586030500816830, 3.7481147217270400,
  5.6402176639218300, -2.0293947756356600, -13.0176784190797000, -14.3548733057880000, -5.6616595716153700,
  -7.0882372944684300, -4.7974901120556000, 4.9572027313948600, 11.7410752857898000, 8.2053159701191200,
  4.2544505318065900, -9.3701410071136900, -22.6230053112365000, -1.6125041254043700, 14.6531362444118000,
  19.8379535523459000, 22.0117262903018000, 12.2947228456072000, 7.9739232963018100, -4.6328565892902000,
  -13.1789737250570000, -11.4437759645248000, -7.5817485852078600, 2.3394871485806200, 10.0314312242962000,
  10.7264537101775000, 7.3142832463438100, -0.0400896223814751, -5.0196500466546800, -4.0981566174797200,
  -1.1594019192428100, 4.8059510880655000, 12.3652707912733000, 14.2825863639924000, 7.8028386344348700,
  -7.2858080595954500, -19.2091135281576000, -15.7635571648698000, -9.7801721173650700, -1.4530436785006500,
  8.5090979192215800, 15.5366283900772000, 19.5213773273585000, 12.4727647223415000, -1.8733974026806600,
  -15.2576046240256000, -26.2276353308989000, -26.1028633207885000, -10.6375612306116000, 0.5716986586959660,
  6.4028839825579200, 11.6669544301862000, 8.6355690269353300, 3.0938153197873500, 0.3181197585434850,
  -0.8913629928642900, -0.9447073025376140,
];

// Expected in-phase data is taken from TA-Lib (http://ta-lib.org/) tests,
// test_ht_hd_tl.xsl model (I1, H5 … H256, 252 entries).
const expectedInPhase = [
  Number.NaN, Number.NaN, Number.NaN, 0.0000000000000000, 0.0000000000000000,
  0.0000000000000000, 8.9872529175000000, 9.0091576575000000, 62.8922912557500000, 62.9791276207500000,
  9.3202615001249900, 8.7283309495500000, -1.1848704282449900, -1.5010734004830000, -0.8655487646566530,
  0.7745532073283320, 2.7342513591579300, 3.1071960048397900, -0.3204381834801930, -4.2097169478666900,
  -3.7660791998155700, -2.1984095344419200, -1.6673040561163700, -0.8242166434465610, -0.3897208505766930,
  -1.4403230005431600, -3.0919072683581900, -4.1400507215698900, -5.4378308974503500, -5.8042001154971300,
  -4.2447673409792000, -2.4688594395473700, 1.5871067197718300, 4.4398185845969000, 4.0931379658000300,
  2.2257963872799100, 0.0853789344010629, 0.0761496596275142, 0.6562703594079780, 1.9759632664586900,
  1.8044230697246500, -0.7668383316115060, -2.8398484277288900, -3.7469733993470100, -2.6882628365238700,
  -1.2306464225462300, 1.0994684052863500, 3.9197242230877300, 4.5784616335867600, 4.9168832083091600,
  3.8199788986904900, 2.5567663771641800, 1.2650716717678000, -0.5028844352015270, -0.5761714173682250,
  -0.9610368566595710, -2.2763843053480600, -3.1371662348609900, -3.9807994773803300, -4.2658324732369800,
  -2.6395964003974300, -0.1269261910403510, 1.7643348923039200, 3.1009182350896800, 3.5648719255944700,
  3.0008356114197900, 1.5180639452540400, 1.3128048976573100, 2.5093571443949900, 2.3525533859797300,
  1.9284161282992300, 1.6003626558239000, 0.0663430106110184, -1.2137724942958300, -1.7668797165080100,
  -3.1331831016454600, -4.1512856629621500, -5.0821921450641700, -4.5075170058699600, -1.6550494937118500,
  7.6038081149401200, 15.2891159603686000, 14.8847754962707000, 12.9988690635142000, 7.1991592609909800,
  2.3835108324180100, 0.9295221021150130, 0.5177358654905350, 1.8551808881107000, 1.8382923953675600,
  1.0430615556800200, 1.7467529527536100, 3.0989653160422200, 4.4627434758212800, 4.7102353554121500,
  8.2220697939487800, 10.2047194248279000, 6.4506713789234200, 3.8861042972072700, 0.9699135069837470,
  -1.8296342690082800, -2.9864186399801100, -4.6191664164085500, -5.2574508398201700, -2.7217664621792900,
  -0.0660925204025718, 1.0403903288656400, 0.0801726581327027, -1.9166269896965400, -0.8013044248702480,
  0.7796421771328210, 4.2523003303003400, 5.2835029638338800, 3.1050232103103000, 0.2711591733054620,
  -2.7932477931874800, -2.2166802365102600, -0.2348737621107720, 3.1906674228900500, 5.2099939384877400,
  4.5937339014171100, 5.0762377549903000, 5.5216616164623400, 3.1834655283183000, 0.7758494307378890,
  0.5219962404362950, 0.4256579177648510, 0.7376186544086310, 3.2455274084547500, 5.3157432463971200,
  5.6378543785304400, 5.7638726605284300, 4.6386006487139200, 4.0163919858067600, 5.0483702637021800,
  5.4865308154394800, 4.7945795314628000, 3.2334940061075900, 1.0144988637610300, -1.1883317454385300,
  -2.1778686460149500, -7.3451329185291400, -11.5042601135226000, -11.3722133851177000, -11.3355948598417000,
  -7.7461926754308300, -3.5974171352647000, 0.6309918061224400, 1.7829857050391800, -0.0528481469618636,
  -1.8884317447710800, -5.0159739257387800, -5.8334265737776800, -3.9292293775237400, -0.1868384347650710,
  1.9560776182106300, 0.2347236093360240, -0.4130954823411370, 0.3826674517360460, 1.4986288941560700,
  4.0215572268737800, 5.3312042083629400, 3.6185099447561600, -0.3528959482532600, -3.4609205606768000,
  -3.1892195443603800, -2.4932501363811400, -1.5994676108084900, 0.3612167450722520, 1.2870129544381500,
  1.5555948738426200, 1.5330342000810300, 2.5725568122557200, 2.6287008556942900, 3.1339707122813300,
  4.8586214602290100, 5.1470848942722500, 5.3068075734872200, 5.0438299621023600, 2.9991687164524500,
  0.0236319135853506, -1.2870855092035100, -2.7173888344592800, -5.0279852881143900, -5.0367678524754000,
  -3.8860406459175900, -4.0825281877563500, -4.0411037859092200, -4.4003957313789800, -3.6221884404560600,
  -2.1301801333455800, -2.7285315906620700, -3.0489373934415800, -3.8105337403114100, -4.0690228024856200,
  -1.3727893471696100, 0.2544565649084070, -1.9476762853383600, -6.7871833168207000, -8.1519460229686200,
  -8.1001939080170600, -11.3315324987123000, -11.5509244483604000, -8.9267336354805800, -4.7170900920400300,
  -3.1812199436030600, -0.6027070795084820, -10.0542611193376000, -16.7522862179154000, -11.3660816174057000,
  -7.6912861850417200, -1.9202029461135700, 0.7073346462979630, 3.0397887265067800, 4.4168090531270200,
  0.8590144137015010, -2.1694430944136800, -4.9418863354384300, -6.2070043733347600, -3.7013224207485700,
  -0.2166762739271730, 2.8182554005803000, 4.0301548967607100, 2.2593928132857600, 0.4638646232494230,
  -0.5271224625867930, -0.8645862239782160, 1.6398614126233000, 6.8504350600273300, 11.2765586473646000,
  11.9177271403470000, 6.8284533928207000, 1.8145565374371400, -0.3277033078805630, -2.5114262516020200,
  -1.2807406681176200, 1.4816606575527900, 6.8349694390423400, 12.2933514584788000, 14.0337643217365000,
  11.7623100781703000, 6.3689897742570600, -2.9916105003911500, -9.1496654017082100, -8.5317203273128400,
  -7.6173804538519000, -4.2721955688582700, -0.1206682954040290, 1.2870128169134400, 1.2183925342729800,
  0.8386484343144220, 0.3258183493692840,
];

// Expected period data is taken from TA-Lib (http://ta-lib.org/) tests,
// test_ht_hd_tl.xsl model (period adjustment, X5 … X256, 252 entries).
const expectedPeriod = [
  Number.NaN, Number.NaN, Number.NaN, 6.000000000000000, 6.000000000000000,
  6.000000000000000, 6.600000000000000, 6.480000000000000, 7.128000000000000, 7.840800000000000,
  8.624880000000000, 9.487368000000010, 10.436104800000000, 11.479715280000000, 12.627686808000000,
  13.890455488800000, 15.092632992472200, 16.243311991597400, 17.324083690403400, 18.475004245551700,
  19.793928938691700, 20.991150791562600, 21.643352022039500, 21.959705519424200, 22.295567484037000,
  22.791325682745500, 23.544576614590200, 24.752147731605700, 26.131811393682200, 26.858904594382200,
  26.702958409577900, 25.600860243375200, 24.401023548778500, 24.269231586852900, 25.063772525606900,
  24.731935337132500, 23.324893884513200, 21.947699992262300, 21.114348897399200, 20.771351737837100,
  20.494233851604400, 20.183056650705500, 20.073950730222800, 20.329324851599500, 20.486682177547600,
  19.991320129284400, 19.037214654890800, 18.305338289364600, 18.072077074725200, 17.695410800682500,
  16.943409301403400, 16.222025478081200, 15.720412102044600, 15.535348292553700, 15.647225038303600,
  15.726724315115400, 15.659028152755600, 15.731926272152600, 16.066872450769700, 16.353132283152400,
  16.417488514615400, 16.327478042059500, 16.274657444500200, 16.306049424020600, 16.267229242589500,
  16.069414540211500, 15.804303177834000, 15.717155609449600, 15.905384578368700, 16.341416455846900,
  17.062385718849300, 17.726097022447900, 18.074288402433000, 18.494521449266000, 19.137157817464000,
  19.391962256800300, 19.560392220028600, 19.777094480192300, 19.290751623371500, 18.017562016229000,
  16.828402923157900, 17.114778109331900, 18.671307835949900, 18.276196598474400, 17.131108499737400,
  16.420699130133500, 16.384257384254200, 16.761284812463100, 17.257329929450600, 17.674593986434500,
  18.030662699220900, 18.444179030948200, 18.897999595547500, 19.377943804339100, 19.997497366949900,
  20.779094276230200, 21.173848640418500, 21.457828654575300, 21.634241987533300, 21.407595434921600,
  21.384357614634800, 21.666002925735200, 21.695440685430200, 21.360632335984100, 20.943570860148100,
  20.402535751359300, 19.887372972108100, 19.709970997965800, 19.649125076619000, 19.443232041094100,
  19.243827618745400, 19.313747204284000, 19.714913779763200, 20.134291666228900, 19.783181020847000,
  19.209690641670400, 19.460010571864000, 20.257433211912800, 21.074817453763800, 22.030867527260900,
  22.791291008915400, 21.616607563144900, 20.189911463977300, 18.857377307354800, 18.125831538562300,
  18.247592228820300, 18.771553474631800, 19.648253936845000, 21.078372413428500, 22.857039083933000,
  25.142742992326400, 26.049798360798400, 25.082168957220200, 24.806386106021400, 25.679481374169500,
  26.899647278044100, 28.071461927551400, 28.820896172665600, 29.148840897874100, 29.911641725893800,
  30.522301095492400, 29.831708133341600, 29.907565347137900, 32.228991190374700, 31.252506165184100,
  29.189840758281900, 27.263311268235300, 25.493790649485100, 24.833135719882200, 24.740125292429300,
  24.567302182123800, 24.228316198340700, 23.897133073236100, 23.670442010647200, 23.568722805351700,
  23.816626211788300, 24.489293689253900, 24.441197040242600, 23.690363029328200, 23.272337293810300,
  23.650689958418800, 24.541373135015500, 25.266648506194000, 24.822433791959300, 24.137921243243200,
  24.164085898425800, 23.679447801608500, 22.356967000947100, 20.900937564817300, 19.748775833847100,
  18.929417088080100, 18.174749782048300, 17.408877728644600, 16.849194933070500, 16.721820589710600,
  16.965495052172900, 17.718617550863000, 19.105336881323600, 19.909658447444800, 19.937274080580900,
  20.012914257426900, 20.584173964128200, 20.851919554908700, 20.628402644809500, 20.525657062631700,
  20.534404371242100, 20.233452244659500, 20.074871676384200, 20.414790876648000, 20.950309986790800,
  21.835118453187100, 23.216096664683200, 24.681124488027900, 26.533680552485700, 28.030508520296200,
  28.912019935050600, 31.803221928555700, 34.983544121411300, 32.674630209398100, 30.518104615577900,
  28.503909710949700, 28.230501292765300, 26.367288207442800, 24.627047185751600, 23.082674396417400,
  22.548443279717300, 24.211646687633100, 26.632811356396400, 29.296092492036100, 32.225701741239700,
  35.448271915363600, 33.402035063759300, 32.601996512141400, 32.684060257133300, 32.156947268423700,
  30.993331799166300, 29.228685633205700, 27.299592381414100, 25.807182056140100, 24.910990815824500,
  24.343386608043300, 24.151018312250900, 24.374269517606000, 24.552001576180600, 24.025117913609500,
  23.060588115528900, 22.492139589927800, 23.186782719829300, 25.505460991812300, 28.056007090993500,
  30.861607800092900, 32.186253240004200, 30.061960526164000, 28.077871131437100, 27.059021434006100,
  26.964120571638100, 27.001238343745600, 26.816631426266700, 26.706734370991900, 26.936033848694400,
  26.057711959547000, 24.337902970216900, 22.731601374182600, 22.155129320948500, 22.557429753923800,
  22.028068563989900, 20.824799623543400, 19.644851848783900, 18.776215429172100, 18.224498541335600,
  17.848949436739100, 17.538093820109200,
];

describe('HilbertTransformerHomodyneDiscriminatorUnrolled', () => {
  const epsilon = 1e-8;

  it('should throw if the smoothing length is less than 2', () => {
    expect(() => {
      new HilbertTransformerHomodyneDiscriminatorUnrolled(
        { smoothingLength: 1, alphaEmaQuadratureInPhase: 0.2, alphaEmaPeriod: 0.2 }
      );
    }).toThrow();
  });

  it('should throw if the smoothing length is greater than 4', () => {
    expect(() => {
      new HilbertTransformerHomodyneDiscriminatorUnrolled(
        { smoothingLength: 5, alphaEmaQuadratureInPhase: 0.2, alphaEmaPeriod: 0.2 }
      );
    }).toThrow();
  });

  it('should throw if alpha quad is 0', () => {
    expect(() => {
      new HilbertTransformerHomodyneDiscriminatorUnrolled(
        { smoothingLength: 4, alphaEmaQuadratureInPhase: 0, alphaEmaPeriod: 0.2 }
      );
    }).toThrow();
  });

  it('should throw if alpha quad is negative', () => {
    expect(() => {
      new HilbertTransformerHomodyneDiscriminatorUnrolled(
        { smoothingLength: 4, alphaEmaQuadratureInPhase: -0.001, alphaEmaPeriod: 0.2 }
      );
    }).toThrow();
  });

  it('should throw if alpha quad is 1', () => {
    expect(() => {
      new HilbertTransformerHomodyneDiscriminatorUnrolled(
        { smoothingLength: 4, alphaEmaQuadratureInPhase: 1, alphaEmaPeriod: 0.2 }
      );
    }).toThrow();
  });

  it('should throw if alpha quad is greater than 1', () => {
    expect(() => {
      new HilbertTransformerHomodyneDiscriminatorUnrolled(
        { smoothingLength: 4, alphaEmaQuadratureInPhase: 1.001, alphaEmaPeriod: 0.2 }
      );
    }).toThrow();
  });

  it('should throw if alpha period is 0', () => {
    expect(() => {
      new HilbertTransformerHomodyneDiscriminatorUnrolled(
        { smoothingLength: 4, alphaEmaQuadratureInPhase: 0.2, alphaEmaPeriod: 0 }
      );
    }).toThrow();
  });

  it('should throw if alpha period is negative', () => {
    expect(() => {
      new HilbertTransformerHomodyneDiscriminatorUnrolled(
        { smoothingLength: 4, alphaEmaQuadratureInPhase: 0.2, alphaEmaPeriod: -0.001 }
      );
    }).toThrow();
  });

  it('should throw if alpha period is 1', () => {
    expect(() => {
      new HilbertTransformerHomodyneDiscriminatorUnrolled(
        { smoothingLength: 4, alphaEmaQuadratureInPhase: 0.2, alphaEmaPeriod: 1 }
      );
    }).toThrow();
  });

  it('should throw if alpha period is greater than 1', () => {
    expect(() => {
      new HilbertTransformerHomodyneDiscriminatorUnrolled(
        { smoothingLength: 4, alphaEmaQuadratureInPhase: 0.2, alphaEmaPeriod: 1.001 }
      );
    }).toThrow();
  });

  it('should calculate expected output and prime state', () => {
    const lenPrimed = 2 + 7 * 3;
    const hthd = new HilbertTransformerHomodyneDiscriminatorUnrolled(
      { smoothingLength: 4, alphaEmaQuadratureInPhase: 0.2, alphaEmaPeriod: 0.2 }
    );

    for (let i = 0; i < input.length; i++) {
      hthd.update(input[i]);

      if (i < lenPrimed) {
        expect(hthd.primed).withContext(`primed ${i}: expected false, actual true`)
          .toBe(false);
      } else {
        expect(hthd.primed).withContext(`primed ${i}: expected true, actual false`)
          .toBe(true);
      }

      let exp = expectedSmoothed[i];
      if (Number.isNaN(exp)) {
        expect(hthd.primed).withContext(`smoothed ${i} primed: expected false, actual true`)
          .toBe(false);
      } else {
        const act = hthd.smoothedValue;
        expect(act).withContext(`smoothed ${i}: expected ${exp}, actual ${act}`)
          .toBeCloseTo(exp, epsilon);
      }

      exp = expectedDetrended[i];
      if (Number.isNaN(exp)) {
        expect(hthd.primed).withContext(`detrended ${i} primed: expected false, actual true`)
          .toBe(false);
      } else {
        const act = hthd.detrendedValue;
        expect(act).withContext(`detrended ${i}: expected ${exp}, actual ${act}`)
          .toBeCloseTo(exp, epsilon);
      }

      exp = expectedQuadrature[i];
      if (Number.isNaN(exp)) {
        expect(hthd.primed).withContext(`quadrature ${i} primed: expected false, actual true`)
          .toBe(false);
      } else {
        const act = hthd.quadratureValue;
        expect(act).withContext(`quadrature ${i}: expected ${exp}, actual ${act}`)
          .toBeCloseTo(exp, epsilon);
      }

      exp = expectedInPhase[i];
      if (Number.isNaN(exp)) {
        expect(hthd.primed).withContext(`in-phase ${i} primed: expected false, actual true`)
          .toBe(false);
      } else {
        const act = hthd.inPhaseValue;
        expect(act).withContext(`in-phase ${i}: expected ${exp}, actual ${act}`)
          .toBeCloseTo(exp, epsilon);
      }

      exp = expectedPeriod[i];
      if (Number.isNaN(exp)) {
        expect(hthd.primed).withContext(`period ${i} primed: expected false, actual true`)
          .toBe(false);
      } else {
        const act = hthd.periodValue;
        expect(act).withContext(`period ${i}: expected ${exp}, actual ${act}`)
          .toBeCloseTo(exp, epsilon);
      }
    }

    let prevVal = hthd.periodValue;
    hthd.update(Number.NaN);
    const newVal = hthd.periodValue;
    expect(prevVal === newVal).withContext('updating with NaN should not change period')
      .toBeTrue();
  });

  const update = function (omega: number): HilbertTransformerHomodyneDiscriminatorUnrolled {
    const updates = 512;
    const hthd = new HilbertTransformerHomodyneDiscriminatorUnrolled(
      { smoothingLength: 4, alphaEmaQuadratureInPhase: 0.2, alphaEmaPeriod: 0.2 }
    );

    for (let i = 0; i < updates; ++i) {
      hthd.update(Math.sin(omega * i));
    }

    return hthd;
  }

  it('should calculate correct period of sinusoid', () => {
    let period = 30;
    let omega = 2 * Math.PI / period;
    let exp = period;
    let act = update(omega).periodValue;
    expect(act).withContext(
      `period ${period} (omega ${omega}) inside (min,max) -> period expected ${exp} actual ${act}`)
      .toBeCloseTo(exp, 1e-2);

    period = 3;
    omega = 2 * Math.PI / period;
    exp = 6;
    act = update(omega).periodValue;
    expect(act).withContext(
      `period ${period} (omega ${omega}) < min -> period expected ${exp} actual ${act}`)
      .toBeCloseTo(exp, 1e-14);

    period = 60;
    omega = 2 * Math.PI / period;
    exp = 50;
    act = update(omega).periodValue;
    expect(act).withContext(
      `period ${period} (omega ${omega}) < min -> period expected ${exp} actual ${act}`)
      .toBeCloseTo(exp, 1e-14);  
  });
});
