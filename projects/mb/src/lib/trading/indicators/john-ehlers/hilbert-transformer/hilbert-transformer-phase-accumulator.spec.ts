import { } from 'jasmine';

import { HilbertTransformerPhaseAccumulator } from './hilbert-transformer-phase-accumulator';

// ng test mb  --code-coverage --include='**/indicators/**/*.spec.ts'
// ng test mb  --code-coverage --include='**/indicators/john-ehlers/hilbert-transformer/*.spec.ts'

/* eslint-disable max-len */
// Input sata taken from TA-Lib (http://ta-lib.org/) tests,
//    test_ht_hd.xsl (price, D5 … D256, 252 entries).
const input = [
  92.00, 93.1725, 95.3125, 94.8450, 94.4075, 94.11, 93.50, 91.7350, 90.9550, 91.6875,
  94.50, 97.97, 97.5775, 90.7825, 89.0325, 92.0950, 91.1550, 89.7175, 90.61, 91.00,
  88.9225, 87.5150, 86.4375, 83.89, 83.0025, 82.8125, 82.8450, 86.7350, 86.86, 87.5475,
  85.78, 86.1725, 86.4375, 87.25, 88.9375, 88.2050, 85.8125, 84.5950, 83.6575, 84.4550,
  83.50, 86.7825, 88.1725, 89.2650, 90.86, 90.7825, 91.86, 90.36, 89.86, 90.9225,
  89.50, 87.6725, 86.50, 84.2825, 82.9075, 84.25, 85.6875, 86.61, 88.2825, 89.5325,
  89.50, 88.0950, 90.6250, 92.2350, 91.6725, 92.5925, 93.0150, 91.1725, 90.9850, 90.3775,
  88.25, 86.9075, 84.0925, 83.1875, 84.2525, 97.86, 99.8750, 103.2650, 105.9375, 103.50,
  103.11, 103.61, 104.64, 106.8150, 104.9525, 105.50, 107.14, 109.7350, 109.8450, 110.9850,
  120.00, 119.8750, 117.9075, 119.4075, 117.9525, 117.22, 115.6425, 113.11, 111.75, 114.5175,
  114.7450, 115.47, 112.53, 112.03, 113.4350, 114.22, 119.5950, 117.9650, 118.7150, 115.03,
  114.53, 115.00, 116.53, 120.1850, 120.50, 120.5950, 124.1850, 125.3750, 122.97, 123.00,
  124.4350, 123.44, 124.03, 128.1850, 129.6550, 130.8750, 132.3450, 132.0650, 133.8150, 135.66,
  137.0350, 137.47, 137.3450, 136.3150, 136.44, 136.2850, 129.0950, 128.31, 126.00, 124.03,
  123.9350, 125.03, 127.25, 125.62, 125.53, 123.9050, 120.6550, 119.9650, 120.78, 124.00,
  122.78, 120.72, 121.78, 122.4050, 123.25, 126.1850, 127.56, 126.5650, 123.06, 122.7150,
  123.59, 122.31, 122.4650, 123.9650, 123.97, 124.1550, 124.4350, 127.00, 125.50, 128.8750,
  130.5350, 132.3150, 134.0650, 136.0350, 133.78, 132.75, 133.47, 130.97, 127.5950, 128.44,
  127.94, 125.81, 124.6250, 122.72, 124.09, 123.22, 121.4050, 120.9350, 118.28, 118.3750,
  121.1550, 120.9050, 117.1250, 113.06, 114.9050, 112.4350, 107.9350, 105.97, 106.37, 106.8450,
  106.97, 110.03, 91.00, 93.56, 93.62, 95.31, 94.1850, 94.78, 97.6250, 97.59,
  95.25, 94.72, 92.22, 91.5650, 92.22, 93.81, 95.59, 96.1850, 94.6250, 95.12,
  94.00, 93.7450, 95.9050, 101.7450, 106.44, 107.9350, 103.4050, 105.06, 104.1550, 103.31,
  103.3450, 104.84, 110.4050, 114.50, 117.3150, 118.25, 117.1850, 109.75, 109.6550, 108.53,
  106.22, 107.72, 109.84, 109.0950, 109.09, 109.1550, 109.3150, 109.06, 109.9050, 109.6250,
  109.53, 108.0600
];

// Expected smoothed data is taken from TA-Lib (http://ta-lib.org/) tests,
// test_ht_hd.xsl model (smooth, E5 … E256, 252 entries).
const expectedSmoothed = [
  Number.NaN, Number.NaN, Number.NaN, 94.366250, 94.596250,
  94.4665, 93.9990, 93.006750, 92.0135, 91.6585,
  92.670750, 94.9710, 96.490750, 94.630250, 92.160250,
  91.4620, 90.975250, 90.555750, 90.599750, 90.6420,
  89.962750, 88.943750, 87.7140, 85.8825, 84.4070,
  83.4475, 82.971250, 84.410250, 85.614750, 86.7085,
  86.621750, 86.3985, 86.3375, 86.643750, 87.654750,
  88.0570, 87.2990, 86.1165, 84.8245, 84.3795,
  83.9275, 85.019750, 86.449250, 87.864250, 89.436250,
  90.241250, 91.077250, 90.9445, 90.502250, 90.5850,
  90.084750, 89.0895, 87.8940, 86.1475, 84.5150,
  84.078750, 84.559750, 85.4910, 86.8585, 88.1885,
  88.977250, 88.822750, 89.531750, 90.6505, 91.2740,
  92.048250, 92.541750, 92.059250, 91.6080, 90.9825,
  89.7275, 88.4120, 86.3970, 84.709250, 84.1665,
  89.4665, 94.477250, 99.265750, 103.1155, 103.821750,
  103.8080, 103.670750, 103.9110, 105.1510, 105.3145,
  105.512750, 106.1780, 107.631250, 108.8365, 110.0085,
  114.2380, 117.1315, 118.2240, 119.110250, 118.572250,
  117.9460, 116.954250, 115.1760, 113.4835, 113.518250,
  113.914250, 114.6900, 114.053750, 113.1395, 113.0360,
  113.3775, 115.9940, 117.2520, 118.2165, 117.1790,
  115.8605, 115.2365, 115.5210, 117.4860, 119.0615,
  120.0780, 121.9710, 123.5745, 123.6970, 123.5845,
  123.8055, 123.6035, 123.8310, 125.6145, 127.4675,
  129.2865, 130.9500, 131.6700, 132.7020, 134.0560,
  135.4815, 136.6120, 137.1520, 136.9270, 136.6865,
  136.4435, 133.4430, 130.9535, 128.3405, 125.9835,
  124.8140, 124.5985, 125.5990, 125.8225, 125.8510,
  125.0700, 123.1015, 121.5165, 120.8230, 121.8925,
  122.4645, 122.0000, 121.8840, 121.9180, 122.4495,
  124.1080, 125.7700, 126.4560, 125.3240, 124.0730,
  123.5190, 122.8500, 122.6685, 123.1465, 123.5015,
  123.8925, 124.2110, 125.3585, 125.6025, 127.0435,
  128.6765, 130.4115, 132.3150, 134.1500, 134.3670,
  133.8475, 133.5725, 132.3570, 130.2980, 129.1955,
  128.3240, 127.1535, 126.0250, 124.4315, 123.9580,
  123.5215, 122.6180, 121.8485, 120.1955, 119.1615,
  119.7240, 120.2115, 119.1900, 116.6580, 115.3955,
  113.7700, 111.1915, 108.7460, 107.1695, 106.6365,
  106.7125, 108.1090, 101.4875, 97.4270, 94.7190,
  94.0220, 94.3470, 94.5915, 95.8520, 96.6980,
  96.3800, 95.7435, 94.1130, 92.7610, 92.2735,
  92.7250, 93.9795, 95.1350, 95.2045, 95.2315,
  94.6795, 94.1845, 94.7975, 97.6185, 101.6550,
  105.0455, 105.2050, 105.2765, 104.6545, 103.9230,
  103.6680, 104.0170, 106.6140, 110.2240, 113.8410,
  116.4350, 117.2620, 114.4370, 112.0490, 109.9770,
  107.9530, 107.6255, 108.3490, 108.7560, 109.1045,
  109.1920, 109.2000, 109.1585, 109.4585, 109.5650,
  109.5865, 108.998500
];

// Expected detrended data is taken from TA-Lib (http://ta-lib.org/) tests,
// test_ht_hd.xsl model (detrender, F5 … F256, 252 entries).
const expectedDetrended = [
  Number.NaN, Number.NaN, Number.NaN, Number.NaN, Number.NaN,
  Number.NaN, Number.NaN, Number.NaN, Number.NaN, -1.09158917174999,
  -1.31736136950000, -0.7219797997500020, 0.6126851362500060, 2.04649033050000, 2.19569659650001,
  -0.2133271552499980, -2.63475882450000, -2.22998537025000, -1.23783729300000, -0.8974204222499940,
  -0.42374519550000, -0.1905730447500270, -0.6744053744999980, -1.41499420424999, -2.30005140637499,
  -3.15257227706250, -3.50094494655000, -2.64795947113501, -1.57447012126670, 1.03299605188037,
  3.01699012627581, 2.98669820049325, 1.79771090187580, 0.0722640389187781, 0.0663175053946354,
  0.58663362047388, 1.79514971265878, 1.65206609750169, -0.7067931052753440, -2.64403086720417,
  -3.53536091109224, -2.55271527827095, -1.17040912272706, 1.05988741309776, 3.92007727829995,
  4.65602006566125, 4.91571511938997, 3.76591185896309, 2.49001863505417, 1.23263484274170,
  -0.49033546352135, -0.56114651019647, -0.9358371428320370, -2.22073643800559, -3.06955618349665,
  -3.90702660933990, -4.19741746981449, -2.60291265737315, -0.1254371759624140, 1.74779330007578,
  3.07835616170813, 3.54432063758886, 2.98657583930008, 1.51191377343487, 1.30815869786988,
  2.50141791797607, 2.34576278603341, 1.92345495002732, 1.59713846933048, 0.0662588013522247,
  -1.21322418049537, -1.76789758360229, -3.13749823938797, -4.15804827865036, -5.09185731540780,
  -4.51822095077251, -1.65907571633411, 7.62236756018212, 15.32666830223220, 14.91608961156670,
  13.02570034937050, 7.21372534351618, 2.38867009707893, 0.9319557235179380, 0.5189327277135990,
  1.85867340342937, 1.84100225343154, 1.04426384600614, 1.74837302503257, 3.10128889235765,
  4.46542827751676, 4.71246603432414, 8.22496904018750, 10.20713988634880, 6.45141324946251,
  3.88585889568542, 0.9696291626798060, -1.82894274792490, -2.98516084473433, -4.61743638234586,
  -5.25614375274198, -2.72128561319742, -0.0660827224112769, 1.04026605636863, 0.0801661089914569,
  -1.91654641732328, -0.80130094835982, 0.7796594344281290, 4.25245384776115, 5.28374002757412,
  3.10518627838302, 0.2711750889133770, -2.79343035102618, -2.21684574690597, -0.2348931351499780,
  3.19091300048209, 5.21035903971881, 4.59409036572877, 5.07670349412617, 5.52222732970453,
  3.18382678153699, 0.7759395538311530, 0.5220477459815930, 0.4256991889015550, 0.7376888685208350,
  3.24576057307683, 5.31601830152646, 5.63806984942615, 5.76402925082688, 4.63866737603003,
  4.01638552492388, 5.04836196196446, 5.48643992805822, 4.79450295487956, 3.23344271391578,
  1.01448232640165, -1.18831161311310, -2.17783352530626, -7.34504406848203, -11.50417767115120,
  -11.37217189013810, -11.33559159784590, -7.74620974299776, -3.59743510589196, 0.6309985007044190,
  1.78300604444141, -0.0528487419543197, -1.88845271257836, -5.01602146266669, -5.83347695100713,
  -3.92926199248176, -0.1868398957753610, 1.95609155685989, 0.2347251347632710, -0.4130979847999250,
  0.38266963712110, 1.49863723863593, 4.02158005265754, 5.33123194908614, 3.61852588004572,
  -0.3528972689206090, -3.46093234904468, -3.18923020861632, -2.49325848965945, -1.59947257120965,
  0.3612177427162450, 1.28701615924357, 1.55559855766649, 1.53303776067065, 2.57256264764642,
  2.62870659309244, 3.13397724551951, 4.85863119525154, 5.14709483492637, 5.30681723214248,
  5.04383804173643, 2.99917256487519, 0.0236319339272428, -1.28708590318014, -2.71738882958001,
  -5.02798497270592, -5.03676744670888, -3.88604010511245, -4.08252754014506, -4.04110319277914,
  -4.40039502920762, -3.62218781223445, -2.13017982676403, -2.72853126259499, -3.04893700510928,
  -3.81053320267703, -4.06902210195896, -1.37278903017323, 0.2544564936308790, -1.94767563213564,
  -6.78718085245121, -8.15194308054589, -8.10019093030179, -11.33152826202410, -11.55092018111250,
  -8.92673037923321, -4.71708839426577, -3.18121912097445, -0.6027069258613980, -10.05425859449120,
  -16.75228328628220, -11.36608044435720, -7.69128603691258, -1.92020290834471, 0.7073346321107810,
  3.03978866442356, 4.41680896139728, 0.8590143613381490, -2.16944294856568, -4.94188604594390,
  -6.20700406244302, -3.70132226005240, -0.2166762653770910, 2.81825529090326, 4.03015474721940,
  2.25939273174386, 0.4638646059150660, -0.5271224412832020, -0.8645861873050190, 1.63986134188871,
  6.85043475730525, 11.27655813831090, 11.91772660250340, 6.82845310117748, 1.81455645823131,
  -0.32770329328411, -2.51142613762282, -1.28074060752020, 1.48166058834299, 6.83496912407494,
  12.29335095490140, 14.03376380583560, 11.76230969044180, 6.36898958779275, -2.99161042212732,
  -9.14966518120663, -8.53172012353893, -7.61738027465766, -4.27219546995304, -0.1206682928092770,
  1.28701279149952, 1.21839251180603, 0.8386484198680230, 0.3258183441834180, 0.1139699616624150,
  0.3727810797362040, 0.4055959972041480
];

// Expected quadrature data is taken from TA-Lib (http://ta-lib.org/) tests,
// test_ht_hd.xsl model (Q1, G5 … G256, 252 entries).
const expectedQuadrature = [
  Number.NaN, Number.NaN, Number.NaN, Number.NaN, Number.NaN,
  Number.NaN, Number.NaN, Number.NaN, Number.NaN, Number.NaN,
  Number.NaN, Number.NaN, Number.NaN, Number.NaN, Number.NaN,
  1.66480303188724, 0.7786406194847540, -1.43427125497716, -2.93506289016807, -1.43214819526157,
  0.5483547938206320, 0.7632362072919870, 0.6516533756083720, 0.4813205782264420, -0.2998508887907050,
  -1.18415042988444, -1.67404201321351, -1.78193436002126, -1.19110374049187, 0.8568405077313820,
  2.81700579319666, 5.03577401398593, 6.27578219006820, 2.78590434940357, -1.12136985127748,
  -3.72964622451648, -2.42896410927406, 0.3528685558118090, 1.52413276034560, 0.6986063534732730,
  -3.54278707768071, -5.48393438847518, -3.74446292246663, -0.0084547974989631, 3.73629771904533,
  5.88392419396208, 7.64512036789832, 5.20381169208744, 1.72606488335266, -0.9176509160193420,
  -3.32009854437240, -3.46241958708691, -3.90405509948644, -2.70123724767228, -1.32110982935297,
  -2.44170613787851, -2.68604219316924, -1.97671599438123, -0.973432968095653, 1.96049508875388,
  5.15665092292346, 5.68261551640071, 4.45957750580051, 2.51142512272765, 0.1492572249152790,
  -1.92991549580742, -1.80760765732393, 0.7140251872954890, 0.7975054096002940, -0.8177557661619140,
  -1.19025471293919, -2.69854460894154, -4.02259967554982, -3.11981180744791, -3.38576073903363,
  -3.60337077710834, -2.33984230248806, 1.39941655684804, 7.61937958344504, 17.59800321155960,
  21.87461267740720, 9.63627603277501, -1.71431167373896, -9.89661027288440, -14.48032470145280,
  -8.92208993927346, -3.82264806016276, -0.1042659431166720, 1.26112241662319, -0.4793737409417960,
  0.6089511832852090, 2.76639950945403, 4.19739316603921, 3.54551693863556, 5.22578123229650,
  6.61949289650144, -2.85189858372881, -9.09611899272424, -9.11118978144126, -10.20996947851470,
  -7.30982303095939, -4.81051753700645, -3.05161971899367, 2.96845094277923, 7.04468414661612,
  5.12866474495247, 1.06185147742612, -2.78124580317767, -0.18785545504519, 3.95437564038306,
  6.40773689874074, 5.57110845642228, -1.69732516877898, -6.41971149020034, -7.86184318670076,
  -3.31244548794392, 3.32495766929323, 7.06998451880492, 8.02889092873388, 3.29575032183025,
  0.55203269984985, 0.68190519005723, -3.33516580320689, -6.44916764071273, -3.81710501846278,
  -0.7998151190605340, 0.6289446949149740, 4.08021623912660, 6.33404475377486, 3.78669275270372,
  1.29365619118236, -0.9779096069123480, -2.47329790913507, 0.3757624917381020, 1.45138327471354,
  -1.22087217049480, -4.60451489759266, -7.60754518513091, -10.22611551380890, -9.29500470864831,
  -13.79679369076420, -18.58325929314990, -8.20472585690426, -0.1093983795001260, 8.45498487951490,
  16.56082646523770, 16.16199371734120, 10.37217073354750, -0.3233463581822680, -5.60545903540916,
  -7.90992126830141, -5.87394001711596, 1.93335397864239, 8.07394408274529, 8.88625341949401,
  1.94119634927266, -1.96480923617147, 1.16506155210076, 3.38776597600055, 5.61776712788073,
  5.06638449103928, -1.39355307938673, -8.88002876291591, -11.47099296595050, -5.53112624885221,
  0.5755961731535770, 2.52847897409896, 4.93146940064520, 4.69845479784679, 2.47928871987440,
  1.10897290447125, 1.67246787302906, 1.85682777290522, 1.23545791359992, 2.97515733195936,
  2.51018804968389, 0.5332075317421140, -0.6705307908098150, -3.79289835837018, -7.42679982892928,
  -7.05626846706045, -5.20661066640511, -5.87735664856598, -3.64617824525506, 0.8220193030672870,
  0.8080554244040670, 0.0952297874860745, 0.1980063475048250, 0.722152531851389, 2.91843820440237,
  1.13529754134807, -1.08479453606972, -0.930309764072138, -0.85860246584270, 3.74811322179887,
  5.64021496722127, -2.02939289125362, -13.01766871374170, -14.35486256751490, -5.66165534619723,
  -7.08823188827672, -4.79748659072781, 4.95719940462661, 11.74106787687010, 8.20531016521070,
  4.25444747226335, -9.37013829619202, -22.62300145116580, -1.61250626411950, 14.65313151089990,
  19.83795047469770, 22.01172460332450, 12.29472156176030, 7.97392262603475, -4.63285622868769,
  -13.17897256808340, -11.44377484136260, -7.58174799953561, 2.33948685101069, 10.03143034994230,
  10.72645286144950, 7.31428268255004, -0.0400896141267706, -5.01964964671610, -4.09815629049427,
  -1.15940182955262, 4.80595065726788, 12.36526968570150, 14.28258510908810, 7.80283793377856,
  -7.28580738172115, -19.20911178663550, -15.76355573527170, -9.78017122307488, -1.45304354726334,
  8.50909719422299, 15.53662713300600, 19.52137591728260, 12.47276400080440, -1.87339714763586,
  -15.25760363787340, -26.22763386418620, -26.10286199323650, -10.63756071670690, 0.5716986339794170,
  6.40288369884265, 11.66695394048010, 8.63556868331194, 3.09381520572367, 0.3181197473965780,
  -0.8913629633892510, -0.9447072733524570
];

// Expected in-phase data is taken from TA-Lib (http://ta-lib.org/) tests,
// test_ht_hd.xsl model (I1, H5 … H256, 252 entries).
const expectedInPhase = [
  Number.NaN, Number.NaN, Number.NaN, Number.NaN, Number.NaN,
  Number.NaN, Number.NaN, Number.NaN, Number.NaN, Number.NaN,
  Number.NaN, Number.NaN, Number.NaN, Number.NaN, Number.NaN,
  0.6126851362500060, 2.04649033050000, 2.19569659650001, -0.2133271552499980, -2.63475882450000,
  -2.22998537025000, -1.23783729300000, -0.8974204222499940, -0.42374519550000, -0.1905730447500270,
  -0.6744053744999980, -1.41499420424999, -2.30005140637499, -3.15257227706250, -3.50094494655000,
  -2.64795947113501, -1.57447012126670, 1.03299605188037, 3.01699012627581, 2.98669820049325,
  1.79771090187580, 0.0722640389187781, 0.0663175053946354, 0.58663362047388, 1.79514971265878,
  1.65206609750169, -0.7067931052753440, -2.64403086720417, -3.53536091109224, -2.55271527827095,
  -1.17040912272706, 1.05988741309776, 3.92007727829995, 4.65602006566125, 4.91571511938997,
  3.76591185896309, 2.49001863505417, 1.23263484274170, -0.49033546352135, -0.56114651019647,
  -0.9358371428320370, -2.22073643800559, -3.06955618349665, -3.90702660933990, -4.19741746981449,
  -2.60291265737315, -0.1254371759624140, 1.74779330007578, 3.07835616170813, 3.54432063758886,
  2.98657583930008, 1.51191377343487, 1.30815869786988, 2.50141791797607, 2.34576278603341,
  1.92345495002732, 1.59713846933048, 0.0662588013522247, -1.21322418049537, -1.76789758360229,
  -3.13749823938797, -4.15804827865036, -5.09185731540780, -4.51822095077251, -1.65907571633411,
  7.62236756018212, 15.32666830223220, 14.91608961156670, 13.02570034937050, 7.21372534351618,
  2.38867009707893, 0.9319557235179380, 0.5189327277135990, 1.85867340342937, 1.84100225343154,
  1.04426384600614, 1.74837302503257, 3.10128889235765, 4.46542827751676, 4.71246603432414,
  8.22496904018750, 10.20713988634880, 6.45141324946251, 3.88585889568542, 0.9696291626798060,
  -1.82894274792490, -2.98516084473433, -4.61743638234586, -5.25614375274198, -2.72128561319742,
  -0.0660827224112769, 1.04026605636863, 0.0801661089914569, -1.91654641732328, -0.80130094835982,
  0.7796594344281290, 4.25245384776115, 5.28374002757412, 3.10518627838302, 0.2711750889133770,
  -2.79343035102618, -2.21684574690597, -0.2348931351499780, 3.19091300048209, 5.21035903971881,
  4.59409036572877, 5.07670349412617, 5.52222732970453, 3.18382678153699, 0.7759395538311530,
  0.5220477459815930, 0.4256991889015550, 0.7376888685208350, 3.24576057307683, 5.31601830152646,
  5.63806984942615, 5.76402925082688, 4.63866737603003, 4.01638552492388, 5.04836196196446,
  5.48643992805822, 4.79450295487956, 3.23344271391578, 1.01448232640165, -1.18831161311310,
  -2.17783352530626, -7.34504406848203, -11.50417767115120, -11.37217189013810, -11.33559159784590,
  -7.74620974299776, -3.59743510589196, 0.6309985007044190, 1.78300604444141, -0.0528487419543197,
  -1.88845271257836, -5.01602146266669, -5.83347695100713, -3.92926199248176, -0.1868398957753610,
  1.95609155685989, 0.2347251347632710, -0.4130979847999250, 0.38266963712110, 1.49863723863593,
  4.02158005265754, 5.33123194908614, 3.61852588004572, -0.3528972689206090, -3.46093234904468,
  -3.18923020861632, -2.49325848965945, -1.59947257120965, 0.3612177427162450, 1.28701615924357,
  1.55559855766649, 1.53303776067065, 2.57256264764642, 2.62870659309244, 3.13397724551951,
  4.85863119525154, 5.14709483492637, 5.30681723214248, 5.04383804173643, 2.99917256487519,
  0.0236319339272428, -1.28708590318014, -2.71738882958001, -5.02798497270592, -5.03676744670888,
  -3.88604010511245, -4.08252754014506, -4.04110319277914, -4.40039502920762, -3.62218781223445,
  -2.13017982676403, -2.72853126259499, -3.04893700510928, -3.81053320267703, -4.06902210195896,
  -1.37278903017323, 0.2544564936308790, -1.94767563213564, -6.78718085245121, -8.15194308054589,
  -8.10019093030179, -11.33152826202410, -11.55092018111250, -8.92673037923321, -4.71708839426577,
  -3.18121912097445, -0.6027069258613980, -10.05425859449120, -16.75228328628220, -11.36608044435720,
  -7.69128603691258, -1.92020290834471, 0.7073346321107810, 3.03978866442356, 4.41680896139728,
  0.8590143613381490, -2.16944294856568, -4.94188604594390, -6.20700406244302, -3.70132226005240,
  -0.2166762653770910, 2.81825529090326, 4.03015474721940, 2.25939273174386, 0.4638646059150660,
  -0.5271224412832020, -0.8645861873050190, 1.63986134188871, 6.85043475730525, 11.27655813831090,
  11.91772660250340, 6.82845310117748, 1.81455645823131, -0.32770329328411, -2.51142613762282,
  -1.28074060752020, 1.48166058834299, 6.83496912407494, 12.29335095490140, 14.03376380583560,
  11.76230969044180, 6.36898958779275, -2.99161042212732, -9.14966518120663, -8.53172012353893,
  -7.61738027465766, -4.27219546995304, -0.1206682928092770, 1.28701279149952, 1.21839251180603,
  0.8386484198680230, 0.3258183441834180
];

// Expected period data is taken from TA-Lib (http://ta-lib.org/) tests,
// test_ht_hd.xsl model (period adjustment, X5 … X256, 252 entries).
const expectedPeriod = [
  Number.NaN, Number.NaN, Number.NaN, Number.NaN, Number.NaN,
  Number.NaN, Number.NaN, Number.NaN, Number.NaN, Number.NaN,
  Number.NaN, Number.NaN, Number.NaN, Number.NaN, Number.NaN,
  Number.NaN, Number.NaN, Number.NaN, Number.NaN, Number.NaN,
  Number.NaN, Number.NaN, Number.NaN, 9.0000000000000, 9.9000000000000,
  10.8900000000000, 11.9790000000000, 13.1769000000000, 14.4945900000000, 15.9440490000000,
  17.5384539000000, 19.2922992900000, 19.5468505155497, 20.2060441732046, 21.6402689768231,
  21.8099545462833, 20.7475158362591, 19.6653672357138, 19.1619747232013, 19.1916534826734,
  19.0978355064469, 18.8427192774240, 19.0920852890565, 20.3318044575806, 20.9556902922565,
  19.9848603704503, 18.6658595860006, 17.6394879567835, 17.4240932003714, 17.0741710421305,
  16.3138180502091, 15.6078676180379, 15.1601059845350, 15.0453716860339, 15.2238162915384,
  15.3590277559266, 15.3413452242541, 15.4629039080093, 15.8487329591212, 16.1817612702297,
  16.2813350093665, 16.2156770243181, 16.1795539561846, 16.2228582338962, 16.1929824791115,
  16.0022478242214, 15.7451206977606, 15.6709853346593, 15.8760568874550, 16.3307817746478,
  17.0763628355829, 17.7604261818190, 18.1154612614302, 18.5433865688082, 19.1997003404985,
  19.4566522617914, 19.6257092331034, 19.8433542349768, 19.3464820205696, 18.0696142072120,
  16.8770196695361, 17.1674090324775, 18.7390426088272, 18.3350905235981, 17.1769136121662,
  16.4555188041831, 16.4114419011674, 16.7835083405422, 17.2756678154116, 17.6895586270129,
  18.0426114667393, 18.4532216189418, 18.9041897906096, 19.3810004464063, 19.9957798867348,
  20.7708917962878, 21.1631245766622, 21.4457587859529, 21.6234425886130, 21.4004831252738,
  21.3793076739263, 21.6617236390071, 21.6919891841363, 21.3582992760658, 20.9423877429801,
  20.4024159959949, 19.8879725481806, 19.7109425075246, 19.6503297610975, 19.4446312771725,
  19.2453797314290, 19.3154800589192, 19.7169234056699, 20.1365462744038, 19.7852578479625,
  19.2115413560242, 19.4620793339041, 20.2599524006968, 21.0777143061545, 22.0341845868883,
  22.7947748136455, 21.6194509075431, 20.1925671476453, 18.8598577159007, 18.1276509925975,
  18.2489089761588, 18.7725460710194, 19.6489833381251, 21.0787792041910, 22.8569907333213,
  25.1426898066534, 26.0492475597181, 25.0816533628533, 24.8058783958812, 25.6789454053094,
  26.8990695730397, 28.0708931334959, 28.8204604476273, 29.1485804130960, 29.9115063127808,
  30.5222902403064, 29.8317897271237, 29.9077507151952, 32.2294095169065, 31.2529448119929,
  29.1902504544014, 27.2636939244109, 25.4941004920783, 24.8334123567110, 24.7403904146060,
  24.5675505911594, 24.2285401507402, 23.8973351680072, 23.6706290182815, 23.5688985232149,
  23.8167989147261, 24.4894735531535, 24.4413616840369, 23.6904990651239, 23.2724513325833,
  23.6507950400801, 24.5414792732485, 25.2667572810605, 24.8225331025778, 24.1380077954015,
  24.1641639984884, 23.6795209276190, 22.3570356492719, 20.9010013068303, 19.7488346522007,
  18.9294715588206, 18.1748006244040, 17.4089252561960, 16.8492387038084, 16.7218589097092,
  16.9655260604453, 17.7186390003249, 19.1053449333823, 19.9096583987675, 19.9372723782437,
  20.0129120651302, 20.5841700975130, 20.8519151050337, 20.6283985603158, 20.5256526384473,
  20.5343995610693, 20.2334482963595, 20.0748683969692, 20.4147873594504, 20.9503060150179,
  21.8351134544747, 23.2160896411784, 24.6811155575933, 26.5336692390390, 28.0304957283933,
  28.9120069005154, 31.8032075905669, 34.9835283496236, 32.6746154785484, 30.5180908569642,
  28.5038968604046, 28.2304921308260, 26.3672796501915, 24.6270391932789, 23.0826690969800,
  22.5484402094979, 24.2116460826653, 26.6328106909319, 29.2960917600251, 32.2257009360276,
  35.4482710296303, 33.4020325887617, 32.6019938363204, 32.6840579207345, 32.1569452971426,
  30.9933301409692, 29.2286841957236, 27.2995910388058, 25.8071808313889, 24.9109896569330,
  24.3433854292849, 24.1510170452033, 24.3742681783186, 24.5520002065741, 24.0251165337654,
  23.0605867494860, 22.4921382499301, 23.1867814220100, 25.5054595642110, 28.0560055206321,
  30.8616060726953, 32.1862513764688, 30.0619587856219, 28.0778695057708, 27.0590200306405,
  26.9641193157171, 27.0012372163484, 26.8166304303650, 26.7067334839543, 26.9360330260360,
  26.0577111652109, 24.3379022283070, 22.7316006812387, 22.1551286897200, 22.5574291663206,
  22.0280680250295, 20.8247991407935, 19.6448514215095, 18.7762150514098, 18.2244982033367,
  17.8489491282603, 17.53809353350850
];

describe('HilbertTransformerPhaseAccumulator', () => {
  const epsilon = 1e-8;

  it('should throw if the smoothing length is less than 2', () => {
    expect(() => {
      new HilbertTransformerPhaseAccumulator(
        { smoothingLength: 1, alphaEmaQuadratureInPhase: 0.15, alphaEmaPeriod: 0.25 }
      );
    }).toThrow();
  });

  it('should throw if the smoothing length is greater than 4', () => {
    expect(() => {
      new HilbertTransformerPhaseAccumulator(
        { smoothingLength: 5, alphaEmaQuadratureInPhase: 0.15, alphaEmaPeriod: 0.25 }
      );
    }).toThrow();
  });

  it('should throw if alpha quad is 0', () => {
    expect(() => {
      new HilbertTransformerPhaseAccumulator(
        { smoothingLength: 4, alphaEmaQuadratureInPhase: 0, alphaEmaPeriod: 0.25 }
      );
    }).toThrow();
  });

  it('should throw if alpha quad is negative', () => {
    expect(() => {
      new HilbertTransformerPhaseAccumulator(
        { smoothingLength: 4, alphaEmaQuadratureInPhase: -0.001, alphaEmaPeriod: 0.25 }
      );
    }).toThrow();
  });

  it('should throw if alpha quad is 1', () => {
    expect(() => {
      new HilbertTransformerPhaseAccumulator(
        { smoothingLength: 4, alphaEmaQuadratureInPhase: 1, alphaEmaPeriod: 0.25 }
      );
    }).toThrow();
  });

  it('should throw if alpha quad is greater than 1', () => {
    expect(() => {
      new HilbertTransformerPhaseAccumulator(
        { smoothingLength: 4, alphaEmaQuadratureInPhase: 1.001, alphaEmaPeriod: 0.25 }
      );
    }).toThrow();
  });

  it('should throw if alpha period is 0', () => {
    expect(() => {
      new HilbertTransformerPhaseAccumulator(
        { smoothingLength: 4, alphaEmaQuadratureInPhase: 0.15, alphaEmaPeriod: 0 }
      );
    }).toThrow();
  });

  it('should throw if alpha period is negative', () => {
    expect(() => {
      new HilbertTransformerPhaseAccumulator(
        { smoothingLength: 4, alphaEmaQuadratureInPhase: 0.15, alphaEmaPeriod: -0.001 }
      );
    }).toThrow();
  });

  it('should throw if alpha period is 1', () => {
    expect(() => {
      new HilbertTransformerPhaseAccumulator(
        { smoothingLength: 4, alphaEmaQuadratureInPhase: 0.15, alphaEmaPeriod: 1 }
      );
    }).toThrow();
  });

  it('should throw if alpha period is greater than 1', () => {
    expect(() => {
      new HilbertTransformerPhaseAccumulator(
        { smoothingLength: 4, alphaEmaQuadratureInPhase: 0.15, alphaEmaPeriod: 1.001 }
      );
    }).toThrow();
  });

  it('should calculate expected output and prime state', () => {
    const lenPrimed = 18;
    const htpa = new HilbertTransformerPhaseAccumulator(
      { smoothingLength: 4, alphaEmaQuadratureInPhase: 0.15, alphaEmaPeriod: 0.25 }
    );

    for (let i = 0; i < input.length; i++) {
      htpa.update(input[i]);

      if (i < lenPrimed) {
        expect(htpa.primed).withContext(`primed ${i}: expected false, actual ${htpa.primed}`)
          .toBe(false);
      } else {
        expect(htpa.primed).withContext(`primed ${i}: expected true, actual ${htpa.primed}`)
          .toBe(true);
      }

      let exp = expectedSmoothed[i];
      if (Number.isNaN(exp)) {
        expect(htpa.primed).withContext(`smoothed ${i} primed: expected false, actual true`)
          .toBe(false);
      } else {
        const act = htpa.smoothedValue;
        expect(act).withContext(`smoothed ${i}: expected ${exp}, actual ${act}`)
          .toBeCloseTo(exp, epsilon);
      }

      // This should have been len(input), but after 24, the calculated
      // period is different from the expected data produced by homodyne
      // discriminator. This makes the detrended, quadrature, in-phase
      // and period data also different.
      const last = 24;
      exp = expectedDetrended[i];
      if (Number.isNaN(exp)) {
        expect(htpa.primed).withContext(`detrended ${i} primed: expected false, actual true`)
          .toBe(false);
      } else if (i < last) {
        const act = htpa.detrendedValue;
        expect(act).withContext(`detrended ${i}: expected ${exp}, actual ${act}`)
          .toBeCloseTo(exp, epsilon);
      }

      exp = expectedQuadrature[i];
      if (Number.isNaN(exp)) {
        expect(htpa.primed).withContext(`quadrature ${i} primed: expected false, actual true`)
          .toBe(false);
      } else if (i < last) {
        const act = htpa.quadratureValue;
        expect(act).withContext(`quadrature ${i}: expected ${exp}, actual ${act}`)
          .toBeCloseTo(exp, epsilon);
      }

      exp = expectedInPhase[i];
      if (Number.isNaN(exp)) {
        expect(htpa.primed).withContext(`in-phase ${i} primed: expected false, actual true`)
          .toBe(false);
      } else if (i < last) {
        const act = htpa.inPhaseValue;
        expect(act).withContext(`in-phase ${i}: expected ${exp}, actual ${act}`)
          .toBeCloseTo(exp, epsilon);
      }

      exp = expectedPeriod[i];
      if (Number.isNaN(exp)) {
        if (i < lenPrimed) {
          expect(htpa.primed).withContext(`period ${i} primed: expected false, actual true`)
            .toBe(false);
        }
      } else if (i < 23) {
        const act = htpa.periodValue;
        expect(act).withContext(`period ${i}: expected ${exp}, actual ${act}`)
          .toBeCloseTo(exp, epsilon);
      }
    }

    const prevVal = htpa.periodValue;
    htpa.update(Number.NaN);
    const newVal = htpa.periodValue;
    expect(prevVal === newVal).withContext('updating with NaN should not change period')
      .toBeTrue();
  });

  const update = function (omega: number): HilbertTransformerPhaseAccumulator {
    const updates = 512;
    const hthd = new HilbertTransformerPhaseAccumulator(
      { smoothingLength: 4, alphaEmaQuadratureInPhase: 0.15, alphaEmaPeriod: 0.25 }
    );

    for (let i = 0; i < updates; ++i) {
      hthd.update(Math.sin(omega * i));
    }

    return hthd;
  }

  it('should calculate correct period of sinusoid', () => {
    let period = 30;
    let omega = 2 * Math.PI / period;
    let exp = period;
    let act = update(omega).periodValue;
    expect(Math.abs(act-exp)).withContext(
      `period ${period} (omega ${omega}) inside (min,max) -> period expected ${exp} actual ${act}`)
      .toBeLessThan(0.6);

    period = 3;
    omega = 2 * Math.PI / period;
    exp = 6;
    act = update(omega).periodValue;
    expect(Math.abs(act-exp)).withContext(
      `period ${period} (omega ${omega}) < min -> period expected ${exp} actual ${act}`)
      .toBeLessThan(1.1);

    period = 60;
    omega = 2 * Math.PI / period;
    exp = 50;
    act = update(omega).periodValue;
    expect(Math.abs(act-exp)).withContext(
      `period ${period} (omega ${omega}) < min -> period expected ${exp} actual ${act}`)
      .toBeLessThan(12.5);
  });
});
