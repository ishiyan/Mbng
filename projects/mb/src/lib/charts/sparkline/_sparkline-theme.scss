@use 'sass:map';
@use '@angular/material/core/tokens/token-utils';

@use './sparkline';

/*
 Allow external configuration, default to false

  @use 'path/to/sparkline-theme' with (
    $theming-enabled: true
  );
*/
$theming-enabled: false !default;
@debug ("sparkline theming-enabled:", $theming-enabled);

@mixin base($theme) {
  @if $theming-enabled {
    $tokens: map.get(sparkline.get-tokens($theme), base);
    @include token-utils.values($tokens);
  }
}

/// Outputs color theme styles.
/// @param {Map} $theme The theme to generate color styles for.
/// @param {String} $color-variant The color M3 variant to use for the component
@mixin color($theme, $color-variant: null) {
  @if $theming-enabled {
    $tokens: map.get(sparkline.get-tokens($theme), color);
    @include token-utils.values($tokens);
  }
}

/// Outputs typography theme styles.
/// @param {Map} $theme The theme to generate typography styles for.
@mixin typography($theme) {
  @if $theming-enabled {
    $tokens: map.get(sparkline.get-tokens($theme), typography);
    @include token-utils.values($tokens);
  }
}

/// Outputs density theme styles.
/// @param {Map} $theme The theme to generate density styles for.
@mixin density($theme) {
  @if $theming-enabled {
    $tokens: map.get(sparkline.get-tokens($theme), density);
    @include token-utils.values($tokens);
  }
}

/// Defines the tokens that will be available in the `overrides` mixin and for docs extraction.
@function _define-overrides() {
  @return ((namespace: sparkline,
      tokens: token-utils.get-overrides(sparkline.get-tokens(), sparkline)),
  );
}

/// Outputs the CSS variable values for the given tokens.
/// @param {Map} $tokens The token values to emit.
@mixin overrides($tokens: ()) {
  @if $theming-enabled {
    @include token-utils.batch-create-token-values($tokens, _define-overrides());
  }
}

/// Outputs all (base, color, typography, and density) theme styles for the mat-icon.
/// @param {Map} $theme The theme to generate styles for.
/// @param {String} $color-variant The color variant to use for the component (M3 only)
@mixin theme($theme, $color-variant: null) {
  @if $theming-enabled {
    @include base($theme);
    @include color($theme, $color-variant);
    @include density($theme);
    @include typography($theme);
  }
}