@use 'sass:map';
@use '@angular/material/core/tokens/m3-utils' as m3-utils;
@use '@angular/material/core/tokens/m3/theme' as m3-theme;

// The prefix used to generate the fully qualified name for tokens in this file.
$prefix: (linear-chart);

/// Generates custom tokens.
@function get-tokens($theme: m3-theme.$sys-theme, $color-variant: null) {
  $system: m3-utils.get-system($theme);
  $outline: map.get($system, outline);
  $on-surface: map.get($system, on-surface);
  $on-surface-variant: map.get($system, on-surface-variant);
  $surface-container: map.get($system, surface-container);
  
  // Default to primary if no color variant specified
  $variant-key: if($color-variant, $color-variant, primary);
  
  // Dynamically construct colors
  $variant: map.get($system, $variant-key);
  $on-variant: map.get($system, on-#{$variant-key});
  $variant-container: map.get($system, #{$variant-key}-container);
  $on-variant-container: map.get($system, on-#{$variant-key}-container);

  $font-family: Roboto, sans-serif;
  $dash-array: 1, 1;

  @return (
    base: (
      linear-chart-crosshair-wire-width: 1px,
      linear-chart-crosshair-wire-dasharray: $dash-array,
      linear-chart-nav-data-opacity: 0.3,
      linear-chart-nav-selection-opacity: 0.3,
      linear-chart-line-width: 1px,
      linear-chart-area-opacity: 0.5,
      linear-chart-point-radius: 1.5px,
      linear-chart-volume-opacity: 0.5,
    ),
    color: (
      linear-chart-legend-color: $on-surface,
      linear-chart-axis-color: $on-surface-variant,
      linear-chart-crosshair-wire-color: $outline,
      linear-chart-crosshair-annotation-background: $variant-container,
      linear-chart-crosshair-annotation-color: $on-variant-container,
      linear-chart-nav-data-color: $outline,
      linear-chart-nav-selection-color: $outline,
      linear-chart-ohlc-color: $on-surface-variant,
      linear-chart-ohlc-up-color: $on-surface-variant,
      linear-chart-ohlc-down-color: $on-surface-variant,
      linear-chart-candle-color: $on-surface-variant,
      linear-chart-candle-up-color: $on-surface-variant,
      linear-chart-candle-down-color: $on-surface-variant,
      linear-chart-line-color: $on-surface-variant,
      linear-chart-area-color: $outline,
      linear-chart-point-color: $on-surface-variant,
      linear-chart-volume-color: $outline,
      linear-chart-control-panel-background-color: $surface-container,
      linear-chart-control-panel-header-color: $on-surface,
      linear-chart-control-panel-variant-color: $variant,
      linear-chart-control-panel-on-variant-color: $on-variant,
      linear-chart-control-panel-variant-container-color: $variant-container,
      linear-chart-control-panel-on-variant-container-color: $on-variant-container,
    ),
    typography: (
      // Note we don't need line height because we use only single-line labels
      linear-chart-legend-font-family: $font-family,
      linear-chart-legend-font-size: 12px,
      linear-chart-legend-font-weight: 400,
      linear-chart-axis-font-family: $font-family,
      linear-chart-axis-font-size: 10px,
      linear-chart-axis-font-weight: 400,
      linear-chart-crosshair-annotation-font-family: $font-family,
      linear-chart-crosshair-annotation-font-size: 10px,
      linear-chart-crosshair-annotation-font-weight: 400,
    ),
    density: (),
  );
}

@function get-ripple-color($color) {
  @return m3-utils.color-with-opacity($color,
    map.get(m3-theme.$sys-theme, pressed-state-layer-opacity));
}
